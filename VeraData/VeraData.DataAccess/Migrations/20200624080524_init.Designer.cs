// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VeraData.DataAccess;

namespace VeraData.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200624080524_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VeraData.DataAccess.Flaw", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int?>("CweId")
                        .HasColumnType("int");

                    b.Property<string>("Function")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LineNumber")
                        .HasColumnType("int");

                    b.Property<string>("PrototypeFunction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemediationStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ScanId")
                        .HasColumnType("int");

                    b.Property<int>("SeverityId")
                        .HasColumnType("int");

                    b.Property<string>("SourceFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceFilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VeracodeCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("VeracodeCweId")
                        .HasColumnType("int");

                    b.Property<int>("VeracodeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CweId");

                    b.HasIndex("ScanId");

                    b.HasIndex("SeverityId");

                    b.ToTable("Flaws");
                });

            modelBuilder.Entity("VeraData.DataAccess.Models.Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("VeracodeId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("VeraData.DataAccess.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VeracodeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("VeraData.DataAccess.Models.Cwe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Exploitability")
                        .HasColumnType("int");

                    b.Property<bool>("Pci")
                        .HasColumnType("bit");

                    b.Property<bool>("PolicyImpact")
                        .HasColumnType("bit");

                    b.Property<int>("RemediationEffort")
                        .HasColumnType("int");

                    b.Property<int>("VeracodeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cwes");
                });

            modelBuilder.Entity("VeraData.DataAccess.Models.MitigationAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FlawId")
                        .HasColumnType("int");

                    b.Property<string>("Reviewer")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FlawId");

                    b.ToTable("MitigationActions");
                });

            modelBuilder.Entity("VeraData.DataAccess.Models.MitigationStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MitigationStatuses");
                });

            modelBuilder.Entity("VeraData.DataAccess.Models.Module", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("EntryPoint")
                        .HasColumnType("bit");

                    b.Property<bool>("HasFatalErrors")
                        .HasColumnType("bit");

                    b.Property<string>("Hash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Platform")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ScanId")
                        .HasColumnType("int");

                    b.Property<double>("Size")
                        .HasColumnType("float");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("VeracodeId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ScanId");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("VeraData.DataAccess.Models.PreScanMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Filename")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ScanId")
                        .HasColumnType("int");

                    b.Property<int>("VeracodeModuleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScanId");

                    b.ToTable("PreScanError");
                });

            modelBuilder.Entity("VeraData.DataAccess.Models.RemediationStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RemediationStatuses");
                });

            modelBuilder.Entity("VeraData.DataAccess.Models.Sandbox", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("VeracodeId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.ToTable("Sandboxes");
                });

            modelBuilder.Entity("VeraData.DataAccess.Models.Severity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VeracodeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Severities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "None",
                            VeracodeId = 0
                        },
                        new
                        {
                            Id = 2,
                            Title = "Informational",
                            VeracodeId = 1
                        },
                        new
                        {
                            Id = 3,
                            Title = "Low",
                            VeracodeId = 2
                        },
                        new
                        {
                            Id = 4,
                            Title = "Medium",
                            VeracodeId = 3
                        },
                        new
                        {
                            Id = 5,
                            Title = "High",
                            VeracodeId = 4
                        },
                        new
                        {
                            Id = 6,
                            Title = "Very High",
                            VeracodeId = 5
                        });
                });

            modelBuilder.Entity("VeraData.DataAccess.Models.SourceFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ScanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScanId");

                    b.ToTable("SourceFiles");
                });

            modelBuilder.Entity("VeraData.DataAccess.Models.UploadFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Hash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ScanId")
                        .HasColumnType("int");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<long>("VeracodeId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ScanId");

                    b.HasIndex("StatusId");

                    b.ToTable("UploadFiles");
                });

            modelBuilder.Entity("VeraData.DataAccess.Models.UploadFileStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UploadFileStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Status = "PendingUpload"
                        },
                        new
                        {
                            Id = 2,
                            Status = "Uploading"
                        },
                        new
                        {
                            Id = 3,
                            Status = "Purged"
                        },
                        new
                        {
                            Id = 4,
                            Status = "Uploaded"
                        },
                        new
                        {
                            Id = 5,
                            Status = "Missing"
                        },
                        new
                        {
                            Id = 6,
                            Status = "Partial"
                        },
                        new
                        {
                            Id = 7,
                            Status = "InvalidChecksum"
                        },
                        new
                        {
                            Id = 8,
                            Status = "InvalidArchive"
                        },
                        new
                        {
                            Id = 9,
                            Status = "ArchiveFileWithinAnotherArchive"
                        },
                        new
                        {
                            Id = 10,
                            Status = "ArchiveFilewithUnsupportedCompression"
                        },
                        new
                        {
                            Id = 11,
                            Status = "ArchiveFileisPasswordProtected"
                        });
                });

            modelBuilder.Entity("VeraData.DataAccess.Scan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SandboxId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ScanEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ScanStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("ScanStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScanType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Submitter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VeracodeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("SandboxId");

                    b.ToTable("Scans");
                });

            modelBuilder.Entity("VeraData.DataAccess.Flaw", b =>
                {
                    b.HasOne("VeraData.DataAccess.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("VeraData.DataAccess.Models.Cwe", "Cwe")
                        .WithMany()
                        .HasForeignKey("CweId");

                    b.HasOne("VeraData.DataAccess.Scan", null)
                        .WithMany("Flaws")
                        .HasForeignKey("ScanId");

                    b.HasOne("VeraData.DataAccess.Models.Severity", "Severity")
                        .WithMany()
                        .HasForeignKey("SeverityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VeraData.DataAccess.Models.MitigationAction", b =>
                {
                    b.HasOne("VeraData.DataAccess.Flaw", null)
                        .WithMany("MitigationActions")
                        .HasForeignKey("FlawId");
                });

            modelBuilder.Entity("VeraData.DataAccess.Models.Module", b =>
                {
                    b.HasOne("VeraData.DataAccess.Scan", null)
                        .WithMany("Modules")
                        .HasForeignKey("ScanId");
                });

            modelBuilder.Entity("VeraData.DataAccess.Models.PreScanMessage", b =>
                {
                    b.HasOne("VeraData.DataAccess.Scan", null)
                        .WithMany("PreScanErrors")
                        .HasForeignKey("ScanId");
                });

            modelBuilder.Entity("VeraData.DataAccess.Models.Sandbox", b =>
                {
                    b.HasOne("VeraData.DataAccess.Models.Application", null)
                        .WithMany("Sandboxes")
                        .HasForeignKey("ApplicationId");
                });

            modelBuilder.Entity("VeraData.DataAccess.Models.SourceFile", b =>
                {
                    b.HasOne("VeraData.DataAccess.Scan", null)
                        .WithMany("SourceFiles")
                        .HasForeignKey("ScanId");
                });

            modelBuilder.Entity("VeraData.DataAccess.Models.UploadFile", b =>
                {
                    b.HasOne("VeraData.DataAccess.Scan", null)
                        .WithMany("UploadFiles")
                        .HasForeignKey("ScanId");

                    b.HasOne("VeraData.DataAccess.Models.UploadFileStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");
                });

            modelBuilder.Entity("VeraData.DataAccess.Scan", b =>
                {
                    b.HasOne("VeraData.DataAccess.Models.Application", null)
                        .WithMany("Scans")
                        .HasForeignKey("ApplicationId");

                    b.HasOne("VeraData.DataAccess.Models.Sandbox", "Sandbox")
                        .WithMany()
                        .HasForeignKey("SandboxId");
                });
#pragma warning restore 612, 618
        }
    }
}
